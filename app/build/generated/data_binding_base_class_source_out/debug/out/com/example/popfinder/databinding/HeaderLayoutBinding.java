// Generated by view binder compiler. Do not edit!
package com.example.popfinder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.popfinder.R;
import com.github.florent37.shapeofview.shapes.ArcView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HeaderLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ArcView header;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final CircleImageView imgHeader;

  @NonNull
  public final ConstraintLayout linearLayout;

  @NonNull
  public final TextView txtHeaderEmail;

  @NonNull
  public final TextView txtHeaderName;

  private HeaderLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull ArcView header,
      @NonNull ImageView imageView, @NonNull CircleImageView imgHeader,
      @NonNull ConstraintLayout linearLayout, @NonNull TextView txtHeaderEmail,
      @NonNull TextView txtHeaderName) {
    this.rootView = rootView;
    this.header = header;
    this.imageView = imageView;
    this.imgHeader = imgHeader;
    this.linearLayout = linearLayout;
    this.txtHeaderEmail = txtHeaderEmail;
    this.txtHeaderName = txtHeaderName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HeaderLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HeaderLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.header_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HeaderLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.header;
      ArcView header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.imgHeader;
      CircleImageView imgHeader = ViewBindings.findChildViewById(rootView, id);
      if (imgHeader == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      ConstraintLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.txtHeaderEmail;
      TextView txtHeaderEmail = ViewBindings.findChildViewById(rootView, id);
      if (txtHeaderEmail == null) {
        break missingId;
      }

      id = R.id.txtHeaderName;
      TextView txtHeaderName = ViewBindings.findChildViewById(rootView, id);
      if (txtHeaderName == null) {
        break missingId;
      }

      return new HeaderLayoutBinding((ConstraintLayout) rootView, header, imageView, imgHeader,
          linearLayout, txtHeaderEmail, txtHeaderName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
